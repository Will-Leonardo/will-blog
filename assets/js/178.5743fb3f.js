(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{736:function(s,t,a){"use strict";a.r(t);var r=a(0),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("Boxx",{attrs:{type:"tip"}}),s._v(" "),t("p",[s._v("🍓 React全家桶-> React基础、React-Router、PubSub、Redux、Ant-Design")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("🐟 清楚两个概念： 库library 和 框架 framework")]),s._v(" "),t("ul",[t("li",[s._v("library ： 小而巧， 可以很方便的从一个库转换到另一个库， 比如说 jQuery")]),s._v(" "),t("li",[s._v("framework： 大而全，框架提供了一整套的解决方案， 比如 Vue的全家桶")])]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("重绘和重排")]),s._v(" "),t("p",[t("strong",[s._v("重绘不一定需要重排，重排必然会导致重绘")])]),s._v(" "),t("ul",[t("li",[s._v("重排： 当渲染树的一部分必须更新并且节点的尺寸发生了变化，浏览器会使渲染树中受到影响的部分失效，并重新构造渲染树。\n1）添加、删除可见的dom")])]),s._v(" "),t("p",[s._v("2）元素的位置改变")]),s._v(" "),t("p",[s._v("3）元素的尺寸改变（外边距、内边距、边框厚度、宽高等几何属性）")]),s._v(" "),t("p",[s._v("4）页面渲染初始化")]),s._v(" "),t("p",[s._v("5）浏览器窗口尺寸改变")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("重绘： 是在一个元素的外观被改变所触发的浏览器行为，浏览器会根据元素的新属性重新绘制，使元素呈现新的外观。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("减少reflow、repaint")])])])]),s._v(" "),t("p",[s._v("1、不要一条一条的修改DOM的样式，可以先定义好css的class，然后修改DOM的className。")]),s._v(" "),t("p",[s._v("2、不要把DOM结点的属性值放在一个循环里当成循环里的变量。")]),s._v(" "),t("p",[s._v("3、为动画的HTML元件适用fixed或absolute的position，那么修改他们的css是不会reflow")])]),s._v(" "),t("h2",{attrs:{id:"几个核心的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#几个核心的概念"}},[s._v("#")]),s._v(" 几个核心的概念")]),s._v(" "),t("h3",{attrs:{id:"虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[s._v("#")]),s._v(" 🐟 虚拟DOM")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("DOM")]),s._v("： 浏览器中的概念，文档对象模型，用js对象表示页面上的元素，并提供了操作dom对象的API")]),s._v(" "),t("li",[t("strong",[s._v("虚拟DOM")]),s._v("：框架中的概念，用js对象来模拟页面上的DOM和DOM嵌套关系")]),s._v(" "),t("li",[t("strong",[s._v("为什么需要需要DOM")]),s._v("： 为了实现页面中，DOM元素的高效更新。")])]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("什么是虚拟DOM？")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("什么是虚拟DOM？")]),t("br"),s._v("\n程序员手动利用js模拟的两棵新旧DOM树，就是React中虚拟DOM的概念;")]),s._v(" "),t("li",[t("strong",[s._v("为什么需要程序员手动模拟两棵DOM树？")]),t("br"),s._v("\n浏览器中，并没有直接提供获取DOM树的API，因此，我们无法拿到浏览器内存中的DOM树")]),s._v(" "),t("li",[t("strong",[s._v("为什么需要DOM树？")]),t("br"),s._v("\n我们只需要对比新旧DOM树，就可以知道哪些节点需要改变，而不是整个DOM树进行更改，打打的提高了性能。")])])]),s._v(" "),t("h3",{attrs:{id:"diff算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[s._v("#")]),s._v(" 🐟 Diff算法")]),s._v(" "),t("p",[s._v("diff 就是 different 的意思，寻找差异， diff算法 包括  tree diff、 component diff、 element diff")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("tree diff:")]),t("br"),s._v("\n新旧两棵DOM树，逐层对比的过程")]),s._v(" "),t("li",[t("strong",[s._v("component diff：")]),t("br"),s._v("\n在进行Tree diff 的时候，每一层中，组件级别的对比，叫做Component Diff， 如果组件的类型不同则移除旧组件，追加新组件到页面上。")]),s._v(" "),t("li",[t("strong",[s._v("element diff")]),t("br"),s._v("\n在进行组件对比的时候，如果两个组件类型相同，则需要进行元素级别的对比，这叫做element diff")])]),s._v(" "),t("h2",{attrs:{id:"创建虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建虚拟dom"}},[s._v("#")]),s._v(" 创建虚拟DOM")]),s._v(" "),t("ul",[t("li",[s._v("纯js的方式（一般不用）")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("cosnt "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VDOM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" React"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'h1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'title'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" React"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'span'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("jsx 方式 （推荐使用）"),t("br"),s._v("\njsx 的出现就是解决js 创建虚拟dom时出现套娃.")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VDOM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("hello"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("h1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意不加引号")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"jsx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[s._v("#")]),s._v(" JSX")]),s._v(" "),t("p",[s._v("1, 全称： JavaScript XML"),t("br"),s._v("\n2, 主要是用来创建虚拟DOM")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VDOM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h2 id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"title2"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("span"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("hello"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("span"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("h2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("3, 语法规则")]),s._v(" "),t("blockquote",[t("p",[s._v("1, 定义虚拟DOM时，不要写引号"),t("br"),s._v("\n2, 标签中混入js表达式（如使用变量），注意要使用 { } 包裹"),t("br"),s._v("\n3, 样式的类名指定不用用class，要用className"),t("br"),s._v("\n4, 内联样式时，需要加 "+s._s()),t("br"),s._v("\n5, 根标签只能有一个")])]),s._v(" "),t("h2",{attrs:{id:"react面向组件编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react面向组件编程"}},[s._v("#")]),s._v(" React面向组件编程")]),s._v(" "),t("p",[s._v("🐟 创建组件的两种方法：")]),s._v(" "),t("ul",[t("li",[s._v("function  函数定义简单组件")]),s._v(" "),t("li",[s._v("class     类定义复杂组件")])]),s._v(" "),t("h2",{attrs:{id:"脚手架创建react项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脚手架创建react项目"}},[s._v("#")]),s._v(" 脚手架创建React项目")]),s._v(" "),t("ul",[t("li",[s._v("安装脚手架")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm install -g create-react-app\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("创建项目")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("create-react-app my-app\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("运行")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd my-app\nnpm start\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("Vssue")],1)}),[],!1,null,null,null);t.default=e.exports}}]);