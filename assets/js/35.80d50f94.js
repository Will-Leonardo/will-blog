(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{551:function(e,t,s){e.exports=s.p+"assets/img/git1.90e14b75.jpg"},552:function(e,t,s){e.exports=s.p+"assets/img/40.9dd89e89.jpg"},553:function(e,t,s){e.exports=s.p+"assets/img/22-10-27-1.f66331f5.png"},728:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("Boxx",{attrs:{type:"tip"}}),e._v(" "),t("h2",{attrs:{id:"写在前面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[e._v("#")]),e._v(" 写在前面")]),e._v(" "),t("p",[e._v("新手推荐学习并熟练掌握下面的命令；"),t("br"),e._v("\n老油条一般会使用集成工具啦，这里作者推荐 "),t("a",{attrs:{href:"https://git-fork.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("fork"),t("OutboundLink")],1),e._v("（用于rebase，等操作），简单的代码提交就用vscode自带的；")]),e._v(" "),t("h2",{attrs:{id:"git有什么用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git有什么用"}},[e._v("#")]),e._v(" git有什么用？")]),e._v(" "),t("ol",[t("li",[e._v("版本控制")]),e._v(" "),t("li",[e._v("多人协作 "),t("a",{attrs:{href:"https://blog.csdn.net/wangliang888888/article/details/80536277",target:"_blank",rel:"noopener noreferrer"}},[e._v("推荐阅读"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("git的基本操作"),t("br"),e._v(" "),t("img",{attrs:{src:s(551),alt:"xx"}})]),e._v(" "),t("h2",{attrs:{id:"git-clone"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-clone"}},[e._v("#")]),e._v(" git clone")]),e._v(" "),t("p",[e._v("git clone 使用较多，通常是从远程仓库克隆一个版本库。"),t("br"),e._v("\n在终端写下面代码即可克隆远程仓库的某个分支")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git clone [-b] [<指定分支名>] <远程仓库地址> // []表示可选，不写，默认克隆master分支\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"git-remote"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[e._v("#")]),e._v(" git remote")]),e._v(" "),t("p",[e._v("为了便于管理，Git要求每个远程仓库都必须指定一个仓库名。git remote命令就用于管理仓库名。"),t("br"),e._v("\n不带选项的时候，git remote命令列出所有远程仓库。一个本地仓库可以添加多个远程仓库。")]),e._v(" "),t("ul",[t("li",[e._v("查看远程仓库")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git remote\n// origin\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("ul",[t("li",[e._v("远程仓库网址")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git remote -v\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("添加远程仓库")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git remote add <仓库名> <远程仓库地址>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("删除远程仓库连接")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git remote rm <仓库名>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("修改远程仓库的名字")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git remote rename <原仓库名> <新仓库名>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"git-fetch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch"}},[e._v("#")]),e._v(" git fetch")]),e._v(" "),t("p",[t("code",[e._v("git fetch")]),e._v(" 命令通常用来"),t("strong",[e._v("查看其他人的进程")]),e._v("，因为它取回的代码对你本地的开发代码没有影响。在多人协作开发时使用较多，主要是查看远程仓库更新，先拉取到本地，再查看是否与自己的代码冲突，"),t("strong",[e._v("若无冲突就合并到自己的本地分支，若冲突则手动解决后合并分支。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git fetch <远程主机名> <分支名>\n\n// 不写分支名时，将取回所有分支的更新\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("ul",[t("li",[e._v("查看更新")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git log -p FETCH_HEAD\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("合并到master要使用下面的命令，避免落后master分支")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git fetch origin\n\ngit merge origin/master\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h2",{attrs:{id:"git-branch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[e._v("#")]),e._v(" git branch")]),e._v(" "),t("ul",[t("li",[e._v("合并分支（重要） "),t("a",{attrs:{href:"https://www.cnblogs.com/panxuejun/p/7009195.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考链接"),t("OutboundLink")],1),t("br"),e._v(" "),t("code",[e._v("git merge")]),e._v(" 命令用于合并"),t("strong",[e._v("指定分支到当前分支")]),e._v(",")])]),e._v(" "),t("p",[e._v("因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。")]),e._v(" "),t("p",[e._v("创建分支是依照master分支创建的（例如 dev ），-> 修改dev分支，-> 合并到master分支（实际上是将master指向dev的当前提交） -> 删除dev分支")]),e._v(" "),t("p",[e._v("🌰 举个例子："),t("br"),e._v("\n1, 创建并切换到dev分支 "),t("code",[e._v("git checkout -b dev")]),e._v("  （从未提交过的仓库不存在任何分支）"),t("br"),e._v("\n2, 在dev分支上修改内容（例如添加 test.html 文件）"),t("br"),e._v("\n3, commit修改 "),t("code",[e._v("git add test.html")]),e._v(","),t("code",[e._v('git commit -m "add test.html"')]),t("br"),e._v("\n4, 切换到master分支 "),t("code",[e._v("git checkout master")]),e._v(" (发现master中并没有 test.html, 即master不会被修改)"),t("br"),e._v("\n5, 合并分支 "),t("code",[e._v("git merge dev")]),e._v(" ( 将dev分支合并到master分支上 )"),t("br"),e._v("\n6, 删除dev分支"),t("code",[e._v("git branch -d dev")])]),e._v(" "),t("ul",[t("li",[e._v("查看远程分支")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch -r\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("查看所有分支（远程+本地）")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch -a\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("创建分支")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch <branchName>\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("ul",[t("li",[e._v("创建并切换到该分支")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch -b <branchName>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("删除分支")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch -d <branchName>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("删除远程分支")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git remote origin --delete  dev\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"git-pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[e._v("#")]),e._v(" git pull")]),e._v(" "),t("p",[e._v("🐟  相信你在学习前面的团队协作时一定遇到了，push时显示 "),t("strong",[e._v("当前分支过期")]),e._v(" 的情况")]),e._v(" "),t("blockquote",[t("p",[e._v("这是因为你在修改时，远程的分支已经被其他程序员修改了，你本地就不是最新的版本了\n这时需要使用"),t("code",[e._v("git pull")]),e._v("将远程分支拉取到本地再push，所以大多数人上班第一件事是 "),t("code",[e._v("git pull")]),e._v(" 将远程代码拉取到本地，然后再开发(最好创建新分支，开发完成后再合并)，在提交前又得"),t("code",[e._v("git pull")]),e._v("一次，这是为了在提交前使得版本最新。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git pull <远程主机名> <远程分支名>:<本地分支名>\n\n// 如果远程分支是与当前分支合并，则冒号后面的部分可以省略。\n// 例： git pull origin master\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("ul",[t("li",[e._v("git pull 与 git fetch\ngit pull = git fetch + git merge")])]),e._v(" "),t("h2",{attrs:{id:"git-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[e._v("#")]),e._v(" git push")]),e._v(" "),t("p",[t("code",[e._v("git push")]),e._v("命令用于将本地分支的更新，推送到远程主机。它的格式与"),t("code",[e._v("git pull")]),e._v("命令相仿。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git push <远程主机名> <本地分支名>:<远程分支名>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"git-reset-和-git-revert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-和-git-revert"}},[e._v("#")]),e._v(" git reset 和 git revert")]),e._v(" "),t("p",[e._v("有时候我们后面修改代码后可能会有bug，这时候需要回退为原来的版本，就可以使用git reset 和 git revert")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.csdn.net/yxlshk/article/details/79944535",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git恢复之前版本的两种方法reset、revert（图文详解）"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.cn/post/6844903614767448072",target:"_blank",rel:"noopener noreferrer"}},[e._v("git reset 和 git revert"),t("OutboundLink")],1)])]),e._v(" "),t("blockquote",[t("p",[e._v("1、git revert 后多出一条commit ，提醒同事，这里有回撤操作，"),t("br"),e._v("\n2、git reset 直接把之前 commit 删掉，非git reset --hard的操作是不会删掉修改代码，如果远程已经有之前代码，需要强推 git push -f")])]),e._v(" "),t("p",[e._v("注意：git revert xxx 会回到xxx版本号之前的版本，XXX修改会被抹除。")]),e._v(" "),t("h2",{attrs:{id:"git-rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[e._v("#")]),e._v(" git rebase")]),e._v(" "),t("p",[e._v("推荐阅读：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://jartto.wang/2018/12/11/git-rebase/",target:"_blank",rel:"noopener noreferrer"}},[e._v("彻底搞懂 Git-Rebase"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("git rebase主要作用：  1，变基； 2，合并提交纪录")]),e._v(" "),t("ul",[t("li",[e._v("变基")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("branch1 % git fetch origin master\n\nbranch1 % git rebase master\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("ul",[t("li",[e._v("合并提交纪录（重要）")])]),e._v(" "),t("p",[e._v("场景: 在开发时，我们常常会有多条提交纪录，某个功能上线，可能会存在100多条提交，或者"),t("strong",[e._v("测试")]),e._v("，"),t("strong",[e._v("走查")]),e._v("时，存在一些并不重要的提交纪录。\n我们上线前将自己开发的分支合并到master上时，就会存在超级多的提交纪录，实际上，我们应该只留下一条或几条关键的提交纪录即可，这时，我们就可以用\n上"),t("code",[e._v("git rebase -i")]),e._v("。")]),e._v(" "),t("p",[e._v("流程如下：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git rebase -i HEAD~4     // 准备合并4条提交纪录 \n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:s(552),alt:"p2"}})]),e._v(" "),t("p",[e._v("保存退出后，可以编辑 信息")]),e._v(" "),t("p",[t("strong",[e._v("重要：")])]),e._v(" "),t("p",[e._v("1，``git log``` 查看是否合并成功了")]),e._v(" "),t("p",[e._v("2，有时候需要解决冲突，解决完毕 "),t("code",[e._v("git add .")]),e._v(" "),t("code",[e._v("git rebase --continue")])]),e._v(" "),t("p",[e._v("3，任何时候都可以使用 "),t("code",[e._v("git rebase --abort")]),e._v(" 终止变基")]),e._v(" "),t("p",[e._v("4，"),t("code",[e._v("rebase -i")]),e._v("(压缩提交) 之后，不要提交代码， 这时可以 "),t("code",[e._v("git log")]),e._v("看看合并成你想要的样子了没有，然后 "),t("code",[e._v("git checkout -b branchName-relase")]),e._v(", 新建一个分支，然后再新分支上提交，就可以了，然后再用新分支 去合并到 master分支，这样master分支就很干净。")]),e._v(" "),t("ul",[t("li",[e._v("使用工具fork")])]),e._v(" "),t("p",[t("img",{attrs:{src:s(553),alt:"p"}})]),e._v(" "),t("p",[e._v("fork工具的其他使用：参考"),t("a",{attrs:{href:"https://juejin.cn/post/6933552407242604551",target:"_blank",rel:"noopener noreferrer"}},[e._v("基于 fork 的 git 常规操作及解析 - 掘金"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"git-cherry-pick"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[e._v("#")]),e._v(" git cherry-pick")]),e._v(" "),t("p",[e._v("git cherry-pick xxxx  在某分支上输入，即可克隆commit id 为xxxx 的提交；")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);